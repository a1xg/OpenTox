# Generated by Django 3.2 on 2021-06-17 18:09

import django.contrib.postgres.indexes
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='GHS',
            fields=[
                ('id', models.BigAutoField(primary_key=True, serialize=False)),
                ('hazard_class', models.CharField(blank=True, max_length=100)),
                ('hazard_subclass', models.CharField(blank=True, max_length=100)),
                ('abbreviation', models.CharField(blank=True, max_length=20)),
                ('hazard_category', models.CharField(blank=True, max_length=20)),
                ('code', models.CharField(blank=True, max_length=20)),
                ('description', models.TextField(blank=True)),
                ('hazard_scale_score', models.IntegerField(blank=True)),
                ('active_status', models.BooleanField(default=True)),
            ],
            options={
                'verbose_name': 'GHS',
                'verbose_name_plural': "GHS's",
                'db_table': 'ghs',
                'managed': True,
            },
        ),
        migrations.CreateModel(
            name='Hazard',
            fields=[
                ('id', models.BigAutoField(primary_key=True, serialize=False)),
                ('substance', models.JSONField(blank=True)),
                ('cas_number', models.CharField(blank=True, max_length=12, null=True)),
                ('ec_number', models.CharField(blank=True, max_length=10, null=True)),
                ('cl_inventory_id', models.IntegerField(blank=True)),
                ('total_notifications', models.IntegerField(blank=True, null=True)),
                ('sourse', models.CharField(blank=True, max_length=100, null=True)),
            ],
            options={
                'verbose_name': 'Карточка опасности',
                'verbose_name_plural': 'Карточки опасности',
                'db_table': 'hazard',
                'managed': True,
            },
        ),
        migrations.CreateModel(
            name='Ingredients',
            fields=[
                ('id', models.BigAutoField(primary_key=True, serialize=False)),
                ('main_name', models.CharField(blank=True, max_length=300)),
                ('data', models.JSONField(blank=True, null=True)),
                ('request_statistics', models.IntegerField(blank=True)),
                ('description', models.TextField(blank=True, null=True)),
                ('hazard', models.ForeignKey(blank=True, on_delete=django.db.models.deletion.DO_NOTHING, to='backend.hazard')),
            ],
            options={
                'verbose_name': 'Ингредиент',
                'verbose_name_plural': 'Ингредиенты',
                'db_table': 'ingredients',
                'managed': True,
            },
        ),
        migrations.CreateModel(
            name='Hazard_GHS',
            fields=[
                ('id', models.BigAutoField(primary_key=True, serialize=False)),
                ('number_of_notifiers', models.IntegerField(blank=True)),
                ('confirmed_status', models.BooleanField(default=True)),
                ('ghs', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='backend.ghs')),
                ('hazard', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='backend.hazard')),
            ],
            options={
                'verbose_name': 'Уведомление GHS связанное с веществом',
                'verbose_name_plural': "Уведомления GHS связанные с веществом's",
                'db_table': 'hazard_ghs',
                'managed': True,
            },
        ),
        migrations.AddField(
            model_name='hazard',
            name='ghs_data',
            field=models.ManyToManyField(through='backend.Hazard_GHS', to='backend.GHS'),
        ),
        migrations.AddIndex(
            model_name='ingredients',
            index=django.contrib.postgres.indexes.GinIndex(fields=['data'], name='enumber_gin_idx'),
        ),
        migrations.AddIndex(
            model_name='ingredients',
            index=django.contrib.postgres.indexes.GinIndex(fields=['data'], name='colourindex_gin_idx'),
        ),
        migrations.AddIndex(
            model_name='ingredients',
            index=django.contrib.postgres.indexes.GinIndex(fields=['data'], name='synonyms_eng_gin_idx'),
        ),
        migrations.AddIndex(
            model_name='ingredients',
            index=django.contrib.postgres.indexes.BTreeIndex(fields=['main_name'], name='main_name_btree_idx'),
        ),
    ]
